# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

variables:
  buildConfiguration: 'Release'
  imageName: 'pipelinenoetapp'
  serviceConnection: 'Visual Studio Professional(160a804a-ab3b-4d4d-ac48-0d575a8dc8f0)'
  RESOURCE_GROUP: 'pipeline'

steps:
- script: dotnet build --configuration $(buildConfiguration)
  displayName: 'dotnet build $(buildConfiguration)'

- task: DotNetCoreCLI@2
  inputs:
    command: 'publish'
    publishWebProjects: true
    arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'
    zipAfterPublish: True

- task: AzureRmWebAppDeployment@4
  inputs:
    ConnectionType: 'AzureRM'
    azureSubscription: '$(serviceConnection)'
    appType: 'webAppLinux'
    WebAppName: 'pipelineapp1'
    packageForLinux: '$(Build.ArtifactStagingDirectory)/**/*.zip'
    RuntimeStack: 'DOTNETCORE|2.2'

- task: Docker@2
  displayName: Login to ACR
  inputs:
    command: login
    containerRegistry: dockerConnection

- task: Docker@2
  displayName: Build docker image
  inputs:
    command: 'buildAndPush'
    Dockerfile: 'Dockerfile'
    repository: pipelinenoetapp.azurecr.io/pipelinenoetapp
    tags: '$(Build.BuildId)'

- task: CmdLine@2
  inputs:
    script: 'az container create --resource-group $(RESOURCE_GROUP) --name $(imageName) --image $(LOGIN_SERVER)/$(imageName) --cpu 1 --memory 1 --registry-login-server $(LOGIN_SERVER) --registry-username $(USERNAME) --registry-password $(PASSWORD) --dns-name-label pipelinedeploytest --ports 80'
- task: AzureCLI@2
  inputs:
    azureSubscription: 'Visual Studio Professional(160a804a-ab3b-4d4d-ac48-0d575a8dc8f0)'
    scriptType: 'ps'
    scriptLocation: 'scriptPath'
    scriptPath: '$(System.DefaultWorkingDirectory)/script.ps1'
- task: AzureCLI@2
  inputs:
    azureSubscription: 'Visual Studio Professional(160a804a-ab3b-4d4d-ac48-0d575a8dc8f0)'
    scriptType: 'batch'
    scriptLocation: 'inlineScript'
    inlineScript: 'az container create --resource-group $(RESOURCE_GROUP) --name $(imageName) --image $(LOGIN_SERVER)/$(imageName) --cpu 1 --memory 1 --registry-login-server $(LOGIN_SERVER) --registry-username $(USERNAME) --registry-password $(PASSWORD) --dns-name-label pipelinedeploytest --ports 80'


- task: CmdLine@2
  displayName: List  name of images and containers
  inputs:
    script: |
      docker images      
      docker ps -a